{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/config/stompConfig.ts","webpack:///./src/app/models/story.ts","webpack:///./src/app/models/vote.ts","webpack:///./src/app/router.animations.ts","webpack:///./src/app/services/story.service.ts","webpack:///./src/app/story-list/create-story/create-story.component.css","webpack:///./src/app/story-list/create-story/create-story.component.html","webpack:///./src/app/story-list/create-story/create-story.component.ts","webpack:///./src/app/story-list/story-list.component.css","webpack:///./src/app/story-list/story-list.component.html","webpack:///./src/app/story-list/story-list.component.ts","webpack:///./src/app/story/add-candidate/add-candidate.component.html","webpack:///./src/app/story/add-candidate/add-candidate.component.ts","webpack:///./src/app/story/candidates/candidates.component.html","webpack:///./src/app/story/candidates/candidates.component.ts","webpack:///./src/app/story/story-display/countdown-timer/countdown-timer.component.html","webpack:///./src/app/story/story-display/countdown-timer/countdown-timer.component.ts","webpack:///./src/app/story/story-display/story-display.component.html","webpack:///./src/app/story/story-display/story-display.component.ts","webpack:///./src/app/story/story.component.html","webpack:///./src/app/story/story.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,4f;;;;;;;;;;;;;;;;;;;;;;ACAwC;AACa;AAOrD;IAAA;IAKA,CAAC;IAHC,8BAAO,GAAP,UAAQ,MAAM;QACZ,MAAM,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IAJU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,UAAU,EAAE,CAAC,mEAAgB,CAAC;;SAE/B,CAAC;OACW,YAAY,CAKxB;IAAD,mBAAC;CAAA;AALwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR+B;AACjB;AAEM;AACU;AACqB;AACT;AACiB;AACA;AACzC;AACkB;AACZ;AACK;AACA;AACkD;AACnC;AACxB;AACgC;AACS;AAmCtF;IAAA;IACA,CAAC;IADY,SAAS;QAjCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,0FAAmB;gBACnB,kGAAqB;gBACrB,kGAAqB;gBACrB,uHAAuB;gBACvB,oFAAkB;gBAClB,qGAAoB;aACrB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,6FAAuB;gBACvB,kFAAiB;gBACjB,0DAAW;gBACX,sEAAgB;gBAChB,6DAAY,CAAC,OAAO,CAAC;oBACnB,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oFAAkB,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,MAAM,EAAC,EAAC;oBACxE,EAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qEAAc,EAAE,IAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,EAAC,EAAC;oBACtE,EAAC,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAC;oBACtD,EAAC,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAC;iBACzD,CAAC;aACH;YACD,SAAS,EAAE,CAAC,qEAAY;gBACtB,+DAAY;gBACZ;oBACE,OAAO,EAAE,8DAAW;oBACpB,QAAQ,EAAE,gEAAW;iBACtB;aACF;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CACrB;IAAD,gBAAC;CAAA;AADqB;;;;;;;;;;;;;;;ACnDf,IAAM,WAAW,GAAgB;IACtC,gBAAgB;IAChB,GAAG,EAAE,sCAAsC;IAE3C,UAAU;IACV,sCAAsC;IACtC,OAAO,EAAE;QACP,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,OAAO;KAClB;IAED,0BAA0B;IAC1B,gDAAgD;IAChD,YAAY,EAAE,CAAC;IACf,aAAa,EAAE,KAAK;IAEpB,wDAAwD;IACxD,sBAAsB;IACtB,iCAAiC;IACjC,eAAe,EAAE,IAAI;IAErB,kCAAkC;IAClC,KAAK,EAAE,IAAI;CACZ,CAAC;;;;;;;;;;;;;;ACtBF;AAAA;IAAA;IASA,CAAC;IAAD,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;ACZD;AAAA;IAKE,cAAY,MAAc,EAAE,cAAsB;QAHlD,WAAM,GAAG,CAAC,CAAC;QAIT,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC;IACjC,CAAC;IACH,WAAC;AAAD,CAAC;;AAED,IAAY,QAGX;AAHD,WAAY,QAAQ;IAClB,2CAAU;IACV,+CAAY;AACd,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB;;;;;;;;;;;;;;;;ACdqF;AAE/E,IAAM,gBAAgB,GAAG,mEAAO,CAAC,kBAAkB,EAAE;IAC1D,sEAAU,CAAC,WAAW,EAAE;QACtB,iEAAK,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC,CAAC,EAC7D,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;QACrB,iEAAK,CAAC;YACJ,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAC,SAAS,EAAE,mBAAmB,EAAC,CAAC;gBACvC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;aAClE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;YACpB,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC;gBACpC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC,CAAC;aACpE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;SACrB,CAAC;KACH,CAAC;IACF,sEAAU,CAAC,aAAa,EAAE;QACxB,iEAAK,CAAC;YACJ,iEAAK,CAAC,gBAAgB,EAAE,iEAAK,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAC,CAAC,EAC7D,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;YACrB,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAC,SAAS,EAAE,kBAAkB,EAAC,CAAC;gBACtC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;aAClE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;YACpB,iEAAK,CAAC,QAAQ,EAAE;gBACd,iEAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC;gBACpC,mEAAO,CAAC,kBAAkB,EAAE,iEAAK,CAAC,EAAC,SAAS,EAAE,mBAAmB,EAAC,CAAC,CAAC;aACrE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;SACrB,CAAC;KACH,CAAC;CACH,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BsC;AACuC;AAGjC;AACgB;AAM/D;IAGE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,QAAG,GAAG,4BAA4B,CAAC;IAG3C,CAAC;IAED,+BAAQ,GAAR,UAAS,EAAU;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,GAAG,GAAG,QAAQ,GAAG,EAAE,CAAC;aAClD,IAAI,CACH,0DAAG,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAA9C,CAA8C,CAAC,EAC3D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,iCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,GAAG,GAAG,SAAS,CAAC;aAChD,IAAI,CACH,0DAAG,CAAC,cAAI,IAAI,cAAO,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAA9C,CAA8C,CAAC,EAC3D,iEAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAC7B,CAAC;IACN,CAAC;IAED,gCAAS,GAAT,UAAU,OAAe,EAAE,MAAc;QACvC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,gBAAgB,GAAG,OAAO,EAAE,MAAM,CAAC;aAC1D,SAAS,CAAC,cAAI;YACb,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2BAAI,GAAJ,UAAK,OAAe,EAAE,IAAU;QAC9B,IAAM,OAAO,GAAG;YACd,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,IAAM,MAAM,GAAW,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE5C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,GAAG,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC;aAC1D,SAAS,CAAC,cAAI;YACb,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAW,GAAX,UAAY,KAAY;QACtB,IAAI,OAAO,GAAG;YACZ,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC;QACF,IAAI,MAAM,GAAW,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,GAAG,GAAG,YAAY,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACzE,CAAC;IAEO,kCAAW,GAAnB,UAAoB,GAAsB;QACxC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACzB,MAAM,CAAC,sFAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAzDU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,YAAY,CA0DxB;IAAD,mBAAC;CAAA;AA1DwB;;;;;;;;;;;;ACXzB,2DAA2D,qCAAqC,KAAK,+BAA+B,qCAAqC,KAAK,K;;;;;;;;;;;ACA9K,+hDAA+hD,EAAE,+BAA+B,EAAE,aAAa,EAAE,mrB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnhD;AACrB;AACiB;AAO1D;IAKE,8BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAJ9C,aAAQ,GAAG,KAAK,CAAC;QACP,kBAAa,GAAwB,IAAI,0DAAY,EAAS,CAAC;QACzE,UAAK,GAAU,IAAI,mDAAK,EAAE,CAAC;QAGzB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,yCAAyC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,yCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IACjC,CAAC;IAED,uCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;aACtC,SAAS,CAAC,eAAK;YACd,YAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;QAA9B,CAA8B,CAC/B,CAAC;QACJ,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,yCAAyC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,CAAC;IArBS;QAAT,4DAAM,EAAE;kCAAgB,0DAAY;+DAAoC;IAF9D,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAMkC,oEAAY;OALnC,oBAAoB,CAwBhC;IAAD,2BAAC;CAAA;AAxBgC;;;;;;;;;;;;ACTjC,kCAAkC,sBAAsB,gCAAgC,4BAA4B,4IAA4I,KAAK,8BAA8B,gCAAgC,KAAK,WAAW,4BAA4B,qBAAqB,KAAK,K;;;;;;;;;;;ACAzY,wcAAwc,kBAAkB,mHAAmH,cAAc,6DAA6D,gBAAgB,iG;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxnB;AAEO;AAChB;AAOvC;IAGE,4BAAoB,YAA0B,EAC1B,MAAc;QADd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;IAC9E,CAAC;IAED,oCAAO,GAAP,UAAQ,KAAY;QAClB,IAAI,SAAS,GAAG,EAAE,CAAC;QAEnB,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YACnD,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC,IAAI,gBAAS,IAAI,CAAC,CAAC,MAAM,GAAG,GAAG,EAA3B,CAA2B,CAAC,CAAC;YAExD,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,SAAS,GAAG,2CAA2C,CAAC;QAC1D,CAAC;QAED,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAC7C,CAAC;QACD,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAED,2CAAc,GAAd,UAAe,KAAY;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,CAAC;IAhCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAIkC,oEAAY;YAClB,sDAAM;OAJvB,kBAAkB,CAiC9B;IAAD,yBAAC;CAAA;AAjC8B;;;;;;;;;;;;ACV/B,ycAAyc,MAAM,uN;;;;;;;;;;;;;;;;;;;;;;;;ACAzY;AAMtE;IAME;QAJA,SAAI,GAAW,CAAC,CAAC;QACP,kBAAa,GAAyB,IAAI,0DAAY,EAAU,CAAC;QACjE,kBAAa,GAAyB,IAAI,0DAAY,EAAU,CAAC;IAG3E,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAED,sCAAM,GAAN;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC;IAClD,CAAC;IAED,uCAAO,GAAP;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;YACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QAChB,CAAC;IACH,CAAC;IAED,mCAAG,GAAH,UAAI,CAAS;QACX,IAAI,CAAC,GAAa,EAAE,CAAC;QACrB,IAAI,CAAS,CAAC;QAEd,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;QAEd,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACxB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAlCS;QAAT,4DAAM,EAAE;kCAAgB,0DAAY;gEAAsC;IACjE;QAAT,4DAAM,EAAE;kCAAgB,0DAAY;gEAAsC;IAJhE,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;SAE9B,CAAC;;OACW,qBAAqB,CAuCjC;IAAD,4BAAC;CAAA;AAvCiC;;;;;;;;;;;;ACNlC,iFAAiF,iBAAiB,iIAAiI,wBAAwB,wjBAAwjB,kBAAkB,+HAA+H,kBAAkB,2bAA2b,aAAa,2mBAA2mB,kDAAkD,mF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp9D;AACrB;AACI;AAErC;AAMjD;IAYE;QAXA,oBAAe,GAAW,4BAA4B,CAAC;QACvD,2BAAsB,GAAW,6DAA6D,CAAC;QAC/F,oBAAe,GAAQ,iGAAe,CAAC;QACvC,sBAAiB,GAAQ,qGAAiB,CAAC;QAG3C,aAAQ,GAAG,qDAAQ,CAAC;QACpB,aAAQ,GAAY,KAAK,CAAC;QAChB,eAAU,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAIhD,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,6CAAe,GAAf,UAAgB,CAAS,EAAE,CAAW;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,iDAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,yCAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IAED,qCAAO,GAAP;QACE,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IAC/D,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACxB,CAAC;IA9BQ;QAAR,2DAAK,EAAE;;2DAAyB;IAIvB;QAAT,4DAAM,EAAE;;2DAAuC;IATrC,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;SAE3B,CAAC;;OACW,mBAAmB,CAoC/B;IAAD,0BAAC;CAAA;AApC+B;;;;;;;;;;;;ACVhC,mDAAmD,OAAO,c;;;;;;;;;;;;;;;;;;;;;;;;ACAH;AAMvD;IAIE;QAFA,UAAK,GAAW,IAAI,CAAC;IAGrB,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAED,mDAAiB,GAAjB;QAAA,iBAkBC;QAjBC,WAAW,CAAC;YACV,IAAI,GAAG,GAAW,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;YACvC,IAAI,IAAI,GAAW,IAAI,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,OAAO,EAAE,CAAC;YACvD,IAAI,QAAQ,GAAW,IAAI,GAAG,GAAG,CAAC;YAElC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;gBACjB,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBAChE,IAAI,KAAK,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;gBACtF,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC9E,IAAI,OAAO,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;gBAElE,KAAI,CAAC,KAAK,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;sBACtC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;sBAC/B,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;sBACnC,OAAO,GAAG,IAAI,CAAC;YACrB,CAAC;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IA5BQ;QAAR,2DAAK,EAAE;;+DAAoB;IADjB,uBAAuB;QAJnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;SAEhC,CAAC;;OACW,uBAAuB,CA8BnC;IAAD,8BAAC;CAAA;AA9BmC;;;;;;;;;;;;ACNpC,yRAAyR,WAAW,0CAA0C,QAAQ,yDAAyD,iBAAiB,+C;;;;;;;;;;;;;;;;;;;;;;;;;ACA/U;AACxC;AAMzC;IAKE;IACA,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAED,2CAAW,GAAX,UAAY,OAAsB;QAChC,IAAI,UAAU,GAAG,EAAE,CAAC;QAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,WAAC,IAAI,iBAAU,IAAI,CAAC,CAAC,MAAM,GAAG,GAAG,EAA5B,CAA4B,CAAC,CAAC;YAE9D,EAAE,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC1B,UAAU,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,UAAU,GAAG,2CAA2C,CAAC;QAC3D,CAAC;QAED,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;IAC9B,CAAC;IAvBQ;QAAR,2DAAK,EAAE;;yDAAgB;IACf;QAAR,2DAAK,EAAE;kCAAQ,mDAAK;wDAAC;IAHX,qBAAqB;QAJjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;SAE9B,CAAC;;OACW,qBAAqB,CA0BjC;IAAD,4BAAC;CAAA;AA1BiC;;;;;;;;;;;;ACPlC,mFAAmF,cAAc,oV;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtC;AAEX;AAEO;AAGR;AAM/C;IAKE,wBAAoB,YAA0B,EAC1B,YAA0B,EAC1B,KAAqB;QAFrB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;IACzC,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YAClD,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YAEnB,qCAAqC;YACrC,IAAI,mBAAmB,GAAG,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,KAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAEvF,KAAI,CAAC,qBAAqB,GAAG,mBAAmB,CAAC,SAAS,CAAC,UAAC,OAAgB;gBAC1E,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACtC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,MAAc;QACvB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC;IAC9B,CAAC;IAED,oCAAW,GAAX,UAAY,MAAc;QACxB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,+BAAM,GAAN,UAAO,IAAU;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,oCAAW,GAAX;QACE,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;IAC3C,CAAC;IAxCU,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;SAEtB,CAAC;yCAMkC,+DAAY;YACZ,oEAAY;YACnB,8DAAc;OAP9B,cAAc,CAyC1B;IAAD,qBAAC;CAAA;AAzC0B;;;;;;;;;;;;;;ACb3B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<nav class=\\\"navbar navbar-expand navbar-light bg-light\\\">\\r\\n  <a class=\\\"navbar-brand\\\">Satoshi's Stories</a>\\r\\n  <ul class=\\\"nav navbar-nav\\\">\\r\\n    <li><a class=\\\"nav-link\\\" [routerLink]=\\\"['/storylist']\\\">Stories</a></li>\\r\\n  </ul>\\r\\n</nav>\\r\\n<div class=\\\"main\\\" [@routerTransition]=\\\"getPage(appOutlet)\\\">\\r\\n  <div>\\r\\n    <router-outlet #appOutlet=\\\"outlet\\\"></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","import {Component} from '@angular/core';\r\nimport {routerTransition} from './router.animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  animations: [routerTransition],\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  getPage(outlet) {\r\n    return outlet.activatedRouteData['page'];\r\n  }\r\n}\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {StoryComponent} from './story/story.component';\r\nimport {CandidatesComponent} from './story/candidates/candidates.component';\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {AddCandidateComponent} from './story/add-candidate/add-candidate.component';\r\nimport {StoryDisplayComponent} from './story/story-display/story-display.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {StompConfig, StompService} from '@stomp/ng2-stompjs';\r\nimport {stompConfig} from './config/stompConfig';\r\nimport {StoryService} from './services/story.service';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {CountdownTimerComponent} from './story/story-display/countdown-timer/countdown-timer.component';\r\nimport {StoryListComponent} from './story-list/story-list.component';\r\nimport {RouterModule} from '@angular/router';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CreateStoryComponent} from './story-list/create-story/create-story.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    StoryComponent,\r\n    CandidatesComponent,\r\n    AddCandidateComponent,\r\n    StoryDisplayComponent,\r\n    CountdownTimerComponent,\r\n    StoryListComponent,\r\n    CreateStoryComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      {path: 'storylist', component: StoryListComponent, data: {page: 'list'}},\r\n      {path: 'story/:id', component: StoryComponent, data: {page: 'detail'}},\r\n      {path: '', redirectTo: 'storylist', pathMatch: 'full'},\r\n      {path: '**', redirectTo: 'storylist', pathMatch: 'full'}\r\n    ]),\r\n  ],\r\n  providers: [StoryService,\r\n    StompService,\r\n    {\r\n      provide: StompConfig,\r\n      useValue: stompConfig\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {StompConfig} from '@stomp/ng2-stompjs';\r\n\r\nexport const stompConfig: StompConfig = {\r\n  // Which server?\r\n  url: 'ws://localhost:8080/socket/websocket',\r\n\r\n  // Headers\r\n  // Typical keys: login, passcode, host\r\n  headers: {\r\n    login: 'guest',\r\n    passcode: 'guest'\r\n  },\r\n\r\n  // How often to heartbeat?\r\n  // Interval in milliseconds, set to 0 to disable\r\n  heartbeat_in: 0, // Typical value 0 - disabled\r\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\r\n\r\n  // Wait in milliseconds before attempting auto reconnect\r\n  // Set to 0 to disable\r\n  // Typical value 5000 (5 seconds)\r\n  reconnect_delay: 5000,\r\n\r\n  // Will log diagnostics on console\r\n  debug: true\r\n};\r\n","import {Candidate} from './candidate';\r\nimport {Phrase} from './phrase';\r\n\r\nexport class Story {\r\n  id: string;\r\n  title: string;\r\n  phrases: Phrase[];\r\n  candidates: Candidate[];\r\n  citation: string;\r\n  period: number;\r\n  updateTime: string;\r\n  totalValue: number;\r\n}\r\n","export class Vote {\r\n  phrase: string;\r\n  weight = 1;\r\n  voteType: VoteType;\r\n\r\n  constructor(phrase: string, weightPolarity: number) {\r\n    this.phrase = phrase;\r\n    this.voteType = weightPolarity;\r\n  }\r\n}\r\n\r\nexport enum VoteType {\r\n  UPVOTE = 0,\r\n  DOWNVOTE = 1,\r\n}\r\n","import {animate, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const routerTransition = trigger('routerTransition', [\r\n  transition('* => list', [\r\n    query(':enter, :leave', style({position: 'fixed', width: '100%'})\r\n      , {optional: true}),\r\n    group([\r\n      query(':enter', [\r\n        style({transform: 'translateX(-100%)'}),\r\n        animate('0.5s ease-in-out', style({transform: 'translateX(0%)'}))\r\n      ], {optional: true}),\r\n      query(':leave', [\r\n        style({transform: 'translateX(0%)'}),\r\n        animate('0.5s ease-in-out', style({transform: 'translateX(100%)'}))\r\n      ], {optional: true}),\r\n    ])\r\n  ]),\r\n  transition('* => detail', [\r\n    group([\r\n      query(':enter, :leave', style({position: 'fixed', width: '100%'})\r\n        , {optional: true}),\r\n      query(':enter', [\r\n        style({transform: 'translateX(100%)'}),\r\n        animate('0.5s ease-in-out', style({transform: 'translateX(0%)'}))\r\n      ], {optional: true}),\r\n      query(':leave', [\r\n        style({transform: 'translateX(0%)'}),\r\n        animate('0.5s ease-in-out', style({transform: 'translateX(-100%)'}))\r\n      ], {optional: true}),\r\n    ])\r\n  ])\r\n]);\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Story} from '../models/story';\r\nimport {catchError, tap} from 'rxjs/operators';\r\nimport {throwError} from 'rxjs/internal/observable/throwError';\r\nimport {Vote} from '../models/vote';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StoryService {\r\n  private url = 'http://localhost:8080/api/';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  getStory(id: string): Observable<Story> {\r\n    return this.http.get<Story>(this.url + 'story/' + id)\r\n      .pipe(\r\n        tap(data => console.log('Single: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getStories(): Observable<Story[]> {\r\n    return this.http.get<Story[]>(this.url + 'stories')\r\n      .pipe(\r\n        tap(data => console.log('Single: ' + JSON.stringify(data))),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  addPhrase(storyId: string, phrase: string): void {\r\n    this.http.post(this.url + 'add/candidate/' + storyId, phrase)\r\n      .subscribe(resp => {\r\n        console.log('response %o, ', resp);\r\n      });\r\n  }\r\n\r\n  vote(storyId: string, vote: Vote): void {\r\n    const options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    const object: string = JSON.stringify(vote);\r\n\r\n    this.http.post(this.url + 'vote/' + storyId, object, options)\r\n      .subscribe(resp => {\r\n        console.log('response %o, ', resp);\r\n      });\r\n  }\r\n\r\n  addNewStory(story: Story): Observable<Story> {\r\n    let options = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    };\r\n    let object: string = JSON.stringify(story);\r\n\r\n    return this.http.post<Story>(this.url + 'add/story/', object, options);\r\n  }\r\n\r\n  private handleError(err: HttpErrorResponse) {\r\n    console.log(err.message);\r\n    return throwError(err);\r\n  }\r\n}\r\n","module.exports = \".ng-valid[required], .ng-valid.required {\\r\\n  border-left: 5px solid #42A948;\\r\\n}\\r\\n\\r\\n.ng-invalid:not(form) {\\r\\n  border-left: 5px solid #a94442;\\r\\n}\\r\\n\"","module.exports = \"<button class=\\\"btn btn-success btn-sm btn-block\\\" (click)=\\\"toggleForm()\\\">Create a new Story</button>\\r\\n<div *ngIf=\\\"showForm\\\">\\r\\n  <div class=\\\"container jumbotron mt-3\\\">\\r\\n    <form #createStoryForm=\\\"ngForm\\\">\\r\\n      <h3>Create a new Story</h3>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"title\\\">Title</label>\\r\\n        <input id=title class=\\\"form-control\\\" placeholder=\\\"The Best Story Ever\\\" maxlength=\\\"50\\\" type=\\\"text\\\"\\r\\n               required [(ngModel)]=\\\"story.title\\\" name=\\\"title\\\" #title=\\\"ngModel\\\">\\r\\n        <div [hidden]=\\\"title.valid || title.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          A title is required ( Even if it is something ludicrous like \\\"The Manly Art of Knitting\\\" )\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"citation\\\">Author</label>\\r\\n        <input id=citation class=\\\"form-control\\\" maxlength=\\\"50\\\"\\r\\n               name=\\\"citation\\\" type=\\\"text\\\" required [(ngModel)]=\\\"story.citation\\\" #citation=\\\"ngModel\\\">\\r\\n        <div [hidden]=\\\"citation.valid || citation.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n          An author is required ( Even if it is someone lame like Stephenie Meyer or L. Ron Hubbard )\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"period\\\">Round Period in Minutes</label>\\r\\n        <input id=period class=\\\"form-control\\\" name=\\\"period\\\" type=\\\"number\\\" min=\\\"0\\\" max=\\\"3600\\\"\\r\\n               pattern=\\\"([1-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|[12][0-9]{3}|3[0-5][0-9]{2}|3600)\\\"\\r\\n               required [(ngModel)]=\\\"story.period\\\" #period=\\\"ngModel\\\">\\r\\n        <div [hidden]=\\\"period.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n          A number between 1 and 3600 is Required ( Unfortunately stories cannot travel backwards in time and waiting\\r\\n          longer than a day for an update just pisses people off )\\r\\n        </div>\\r\\n      </div>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"onSubmit()\\\" [disabled]=\\\"!createStoryForm.form.valid\\\">\\r\\n        Submit\\r\\n      </button>\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-danger ml-2\\\" (click)=\\\"toggleForm()\\\">Cancel</button>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Output} from '@angular/core';\r\nimport {Story} from \"../../models/story\";\r\nimport {StoryService} from \"../../services/story.service\";\r\n\r\n@Component({\r\n  selector: 'app-create-story',\r\n  templateUrl: './create-story.component.html',\r\n  styleUrls: ['./create-story.component.css']\r\n})\r\nexport class CreateStoryComponent {\r\n  showForm = false;\r\n  @Output() formSubmitted: EventEmitter<Story> = new EventEmitter<Story>();\r\n  story: Story = new Story();\r\n\r\n  constructor(private storyService: StoryService) {\r\n    this.story.citation = \"The syndicate of Satoshi's storytellers\";\r\n    this.story.period = 60;\r\n  }\r\n\r\n  toggleForm() {\r\n    this.showForm = !this.showForm;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.storyService.addNewStory(this.story)\r\n      .subscribe(story =>\r\n        this.formSubmitted.emit(story)\r\n      );\r\n    this.showForm = false;\r\n    this.story.period = 60;\r\n    this.story.citation = \"The syndicate of Satoshi's storytellers\";\r\n    this.story.title = null;\r\n  }\r\n}\r\n","module.exports = \".jumbotron-min {\\r\\n  padding: 0.5rem;\\r\\n  background-color: #e9ecef;\\r\\n  border-radius: 0.3rem;\\r\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\r\\n}\\r\\n\\r\\n.jumbotron-min:hover {\\r\\n  background-color: #cdcdcd;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color: #212529;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container mt-4\\\">\\r\\n  <h1 class=\\\"display-4 text-center text-light mb-4\\\">Story List</h1>\\r\\n  <app-create-story (formSubmitted)=\\\"onStoryCreated($event)\\\"></app-create-story>\\r\\n  <div *ngFor=\\\"let story of stories\\\">\\r\\n    <a [routerLink]=\\\"['/story', story.id]\\\">\\r\\n      <div class=\\\"jumbotron-min mt-3\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-2\\\">\\r\\n            <h2 class=\\\"text-center\\\">{{story.totalValue}}</h2>\\r\\n          </div>\\r\\n          <div class=\\\"col\\\">\\r\\n            <h4 class=\\\"text-center text-md-left\\\">{{story?.title}}</h4>\\r\\n            <p class=\\\"text-center text-md-left\\\">{{preview(story)}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {Story} from \"../models/story\";\r\nimport {StoryService} from \"../services/story.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-story-list',\r\n  templateUrl: './story-list.component.html',\r\n  styleUrls: ['./story-list.component.css']\r\n})\r\nexport class StoryListComponent implements OnInit {\r\n  stories: Story[];\r\n\r\n  constructor(private storyService: StoryService,\r\n              private router: Router) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.storyService.getStories().subscribe(stories => this.stories = stories);\r\n  }\r\n\r\n  preview(story: Story): string {\r\n    let fullStory = '';\r\n\r\n    if (story && story.phrases && story.phrases.length) {\r\n      story.phrases.forEach(a => fullStory += a.phrase + ' ');\r\n\r\n      if (fullStory.length > 0) {\r\n        fullStory = fullStory.substring(0, fullStory.length - 1);\r\n      }\r\n    } else {\r\n      fullStory = '[Add a new candidate to begin this story]';\r\n    }\r\n\r\n    if (fullStory.length > 100) {\r\n      return fullStory.substring(0, 100) + '...';\r\n    }\r\n    return fullStory;\r\n  }\r\n\r\n  onStoryCreated(story: Story) {\r\n    this.router.navigate(['../story', story.id]);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container text-light\\\">\\r\\n  <h2>Or add a new one</h2>\\r\\n  <label class=\\\"control-label sr-only\\\" for=\\\"phrase\\\">Enter phrase</label>\\r\\n  <div class=\\\"input-group\\\">\\r\\n    <input class=\\\"form-control\\\" id=\\\"phrase\\\" type=\\\"text\\\" placeholder=\\\"Enter your phrase here\\\"\\r\\n           [(ngModel)]=\\\"phrase\\\" (keyup)=\\\"onType()\\\">\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n      <span class=\\\"input-group-text\\\">satoshi: {{cost}}</span>\\r\\n    </div>\\r\\n    <div class=\\\"input-group-append\\\">\\r\\n      <input class=\\\"btn btn-success\\\" type=\\\"submit\\\" value=\\\"add\\\"\\r\\n             (click)=\\\"onClick()\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-add-candidate',\r\n  templateUrl: './add-candidate.component.html'\r\n})\r\nexport class AddCandidateComponent implements OnInit {\r\n  phrase: string;\r\n  cost: number = 0;\r\n  @Output() phraseChanged: EventEmitter<string> = new EventEmitter<string>();\r\n  @Output() buttonClicked: EventEmitter<string> = new EventEmitter<string>();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onType(): void {\r\n    this.phraseChanged.emit(this.phrase);\r\n    this.cost = this.fib(this.phrase.trim().length);\r\n  }\r\n\r\n  onClick(): void {\r\n    if (this.phrase && this.phrase.length) {\r\n      this.buttonClicked.emit(this.phrase);\r\n      this.phrase = null;\r\n      this.cost = 0;\r\n    }\r\n  }\r\n\r\n  fib(n: number) {\r\n    let f: number[] = [];\r\n    let i: number;\r\n\r\n    f[0] = 0;\r\n    f[1] = 1 / 50;\r\n\r\n    for (i = 2; i <= n; i++) {\r\n      f[i] = f[i - 1] + f[i - 2];\r\n    }\r\n\r\n    return Math.ceil(f[n]);\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"container mb-5\\\">\\r\\n  <h2 class=\\\"text-light\\\">{{candidatesTitle}}</h2>\\r\\n  <div *ngIf=\\\"!isVoting\\\">\\r\\n    <div *ngIf=\\\"!candidates || !candidates.length\\\">\\r\\n      <p class=\\\"text-muted\\\">{{candidatesEmptyMessage}}</p>\\r\\n    </div>\\r\\n    <div class=\\\"form-row\\\">\\r\\n      <div class=\\\"col-auto\\\"\\r\\n           *ngFor=\\\"let candidate of candidates\\\">\\r\\n        <div class=\\\"input-group mb-2\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"chooseCantidate(candidate.phrase, VoteType.UPVOTE)\\\">\\r\\n              <fa-icon [icon]=\\\"faAngleDoubleUp\\\"></fa-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">{{candidate.weight}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <span class=\\\"input-group-text\\\">{{candidate.phrase}}</span>\\r\\n          </div>\\r\\n          <div class=\\\"input-group-append\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"chooseCantidate(candidate.phrase, VoteType.DOWNVOTE)\\\">\\r\\n              <fa-icon [icon]=\\\"faAngleDoubleDown\\\"></fa-icon>\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"isVoting\\\">\\r\\n    <h5 class=\\\"text-muted\\\">\\\"{{vote.phrase}}\\\"</h5>\\r\\n    <div class=\\\"input-group mb-2\\\">\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <span class=\\\"input-group-text\\\">Amount:</span>\\r\\n      </div>\\r\\n      <div class=\\\"input-group-prepend\\\">\\r\\n        <input #number [(ngModel)]=\\\"vote.weight\\\" type=\\\"number\\\" min=\\\"1\\\" (keyup)=\\\"integer()\\\">\\r\\n      </div>\\r\\n      <div class=\\\"input-group-append\\\">\\r\\n        <button type=\\\"submit\\\" class=\\\"btn\\\" [class.btn-success]=\\\"vote.voteType == VoteType.UPVOTE\\\"\\r\\n                [class.btn-danger]=\\\"vote.voteType == VoteType.DOWNVOTE\\\"\\r\\n                (click)=\\\"submitVote()\\\">\\r\\n          {{vote.voteType == VoteType.UPVOTE ? 'up' : 'down'}}-vote\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\r\nimport {faAngleDoubleUp} from \"@fortawesome/free-solid-svg-icons/faAngleDoubleUp\";\r\nimport {faAngleDoubleDown} from \"@fortawesome/free-solid-svg-icons/faAngleDoubleDown\";\r\nimport {Candidate} from \"../../models/candidate\";\r\nimport {Vote, VoteType} from \"../../models/vote\";\r\n\r\n@Component({\r\n  selector: 'app-candidates',\r\n  templateUrl: './candidates.component.html'\r\n})\r\nexport class CandidatesComponent implements OnInit, OnChanges {\r\n  candidatesTitle: string = \"Vote on the next candidate\";\r\n  candidatesEmptyMessage: string = \"There are no candidates yet! Add a new word or phrase below\";\r\n  faAngleDoubleUp: any = faAngleDoubleUp;\r\n  faAngleDoubleDown: any = faAngleDoubleDown;\r\n  @Input() candidates: Candidate[];\r\n  vote: Vote;\r\n  VoteType = VoteType;\r\n  isVoting: boolean = false;\r\n  @Output() clickEvent = new EventEmitter<Vote>();\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  chooseCantidate(s: string, t: VoteType,) {\r\n    this.vote = new Vote(s, t);\r\n    this.isVoting = true;\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.isVoting = false;\r\n  }\r\n\r\n  integer() {\r\n    let int = Math.floor(this.vote.weight);\r\n    this.vote.weight = int < 1 ? 1 : Math.floor(this.vote.weight)\r\n  }\r\n\r\n  submitVote() {\r\n    this.clickEvent.emit(this.vote);\r\n    this.isVoting = false;\r\n  }\r\n}\r\n","module.exports = \"<h3 class=\\\"text-right\\\">\\r\\n  {{count}}\\r\\n</h3>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-countdown-timer',\r\n  templateUrl: './countdown-timer.component.html'\r\n})\r\nexport class CountdownTimerComponent implements OnInit {\r\n  @Input() updateTime: string;\r\n  count: string = \"0s\";\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initiateCountDown();\r\n  }\r\n\r\n  initiateCountDown() {\r\n    setInterval(() => {\r\n      let now: number = new Date().getTime();\r\n      let then: number = new Date(this.updateTime).getTime();\r\n      let distance: number = then - now;\r\n\r\n      if (distance > 0) {\r\n        let days: number = Math.floor(distance / (1000 * 60 * 60 * 24));\r\n        let hours: number = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n        let minutes: number = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\r\n        let seconds: number = Math.floor((distance % (1000 * 60)) / 1000);\r\n\r\n        this.count = (days > 0 ? days + \"d \" : \"\")\r\n          + (hours > 0 ? hours + \"h \" : \"\")\r\n          + (minutes > 0 ? minutes + \"m \" : \"\")\r\n          + seconds + \"s \";\r\n      }\r\n    }, 1000);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"container jumbotron pt-3\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-countdown-timer [updateTime]=\\\"story?.updateTime\\\"></app-countdown-timer>\\r\\n    </div>\\r\\n  </div>\\r\\n  <blockquote class=\\\"blockquote pl-4\\\">\\r\\n    <p>{{paragraph}} <span class=\\\"text-muted font-italic\\\">{{phrase}}</span></p>\\r\\n    <footer class=\\\"blockquote-footer\\\">{{story?.citation}}</footer>\\r\\n  </blockquote>\\r\\n</div>\\r\\n\\r\\n\"","import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\r\nimport {Story} from '../../models/story';\r\n\r\n@Component({\r\n  selector: 'app-story-display',\r\n  templateUrl: './story-display.component.html'\r\n})\r\nexport class StoryDisplayComponent implements OnInit, OnChanges {\r\n  paragraph: string;\r\n  @Input() phrase: string;\r\n  @Input() story: Story;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    let fullPhrase = '';\r\n\r\n    if (this.story && this.story.phrases && this.story.phrases.length) {\r\n      this.story.phrases.forEach(a => fullPhrase += a.phrase + ' ');\r\n\r\n      if (fullPhrase.length > 0) {\r\n        fullPhrase = fullPhrase.substring(0, fullPhrase.length - 1);\r\n      }\r\n    } else {\r\n      fullPhrase = '[Add a new candidate to begin this story]';\r\n    }\r\n\r\n    this.paragraph = fullPhrase;\r\n  }\r\n}\r\n","module.exports = \"<div>\\r\\n  <h1 class=\\\"display-4 text-center text-light mb-4\\\">{{story?.title}}</h1>\\r\\n  <app-story-display [phrase]=\\\"storyAddition\\\" [story]=\\\"story\\\"></app-story-display>\\r\\n  <app-candidates [candidates]=\\\"story?.candidates\\\" (clickEvent)=\\\"onVote($event)\\\"></app-candidates>\\r\\n  <app-add-candidate (phraseChanged)=\\\"onAddition($event)\\\" (buttonClicked)=\\\"onAddPhrase($event)\\\"></app-add-candidate>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Story} from \"../models/story\";\r\nimport {StompService} from \"@stomp/ng2-stompjs\";\r\nimport {Message} from '@stomp/stompjs';\r\nimport {StoryService} from \"../services/story.service\";\r\nimport {Vote} from \"../models/vote\";\r\nimport {Subscription} from \"rxjs\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-story',\r\n  templateUrl: './story.component.html'\r\n})\r\nexport class StoryComponent implements OnInit, OnDestroy {\r\n  storyAddition: string;\r\n  story: Story;\r\n  private webSocketSubscription: Subscription;\r\n\r\n  constructor(private stompService: StompService,\r\n              private storyService: StoryService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    let storyId = this.route.snapshot.paramMap.get('id');\r\n    this.storyService.getStory(storyId).subscribe((story) => {\r\n      this.story = story;\r\n\r\n      // Open connection with server socket\r\n      let webSocketObservable = this.stompService.subscribe('/topic/story/' + this.story.id);\r\n\r\n      this.webSocketSubscription = webSocketObservable.subscribe((message: Message) => {\r\n        this.story = JSON.parse(message.body);\r\n        console.log(message.body);\r\n      });\r\n    });\r\n  }\r\n\r\n  onAddition(phrase: string): void {\r\n    this.storyAddition = phrase;\r\n  }\r\n\r\n  onAddPhrase(phrase: string): void {\r\n    this.storyService.addPhrase(this.story.id, phrase);\r\n    this.storyAddition = null;\r\n  }\r\n\r\n  onVote(vote: Vote): void {\r\n    this.storyService.vote(this.story.id, vote);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.webSocketSubscription.unsubscribe();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}